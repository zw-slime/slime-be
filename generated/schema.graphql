### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


scalar DateTime

type Mutation {
  createRole(desc: String, name: String!, nameCN: String!): Role!
  createUser(email: String!, password: String!, role: String!, username: String!): User!
}

type Post {
  author: User
  content: String
  createdAt: DateTime!
  id: ID!
  public: Boolean!
  title: String!
  type: Type!
  updatedAt: DateTime!
}

enum PostOrderByInput {
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  public_ASC
  public_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PostWhereInput {
  AND: [PostWhereInput!]
  author: UserWhereInput
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  public: Boolean
  public_not: Boolean
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  type: TypeWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Query {
  roles(pn: Int!, ps: Int!, search: String!): [Role!]!
  users(pn: Int!, ps: Int!, search: String!): [User!]!
}

type Role {
  createAt: DateTime!
  desc: String
  id: ID!
  name: String!
  nameCN: String!
  updateAt: DateTime!
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  createAt: DateTime
  createAt_gt: DateTime
  createAt_gte: DateTime
  createAt_in: [DateTime!]
  createAt_lt: DateTime
  createAt_lte: DateTime
  createAt_not: DateTime
  createAt_not_in: [DateTime!]
  desc: String
  desc_contains: String
  desc_ends_with: String
  desc_gt: String
  desc_gte: String
  desc_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_not: String
  desc_not_contains: String
  desc_not_ends_with: String
  desc_not_in: [String!]
  desc_not_starts_with: String
  desc_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  nameCN: String
  nameCN_contains: String
  nameCN_ends_with: String
  nameCN_gt: String
  nameCN_gte: String
  nameCN_in: [String!]
  nameCN_lt: String
  nameCN_lte: String
  nameCN_not: String
  nameCN_not_contains: String
  nameCN_not_ends_with: String
  nameCN_not_in: [String!]
  nameCN_not_starts_with: String
  nameCN_starts_with: String
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  updateAt: DateTime
  updateAt_gt: DateTime
  updateAt_gte: DateTime
  updateAt_in: [DateTime!]
  updateAt_lt: DateTime
  updateAt_lte: DateTime
  updateAt_not: DateTime
  updateAt_not_in: [DateTime!]
  users_every: UserWhereInput
  users_none: UserWhereInput
  users_some: UserWhereInput
}

type Type {
  createAt: DateTime!
  id: ID!
  name: String!
  posts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderByInput, skip: Int, where: PostWhereInput): [Post!]
  updateAt: DateTime!
}

input TypeWhereInput {
  AND: [TypeWhereInput!]
  createAt: DateTime
  createAt_gt: DateTime
  createAt_gte: DateTime
  createAt_in: [DateTime!]
  createAt_lt: DateTime
  createAt_lte: DateTime
  createAt_not: DateTime
  createAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [TypeWhereInput!]
  OR: [TypeWhereInput!]
  posts_every: PostWhereInput
  posts_none: PostWhereInput
  posts_some: PostWhereInput
  updateAt: DateTime
  updateAt_gt: DateTime
  updateAt_gte: DateTime
  updateAt_in: [DateTime!]
  updateAt_lt: DateTime
  updateAt_lte: DateTime
  updateAt_not: DateTime
  updateAt_not_in: [DateTime!]
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  password: String!
  posts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderByInput, skip: Int, where: PostWhereInput): [Post!]
  role: Role!
  updatedAt: DateTime!
  username: String!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  username_ASC
  username_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  posts_every: PostWhereInput
  posts_none: PostWhereInput
  posts_some: PostWhereInput
  role: RoleWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}
